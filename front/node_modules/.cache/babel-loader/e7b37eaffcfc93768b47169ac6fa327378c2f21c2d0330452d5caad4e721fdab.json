{"ast":null,"code":"import axios from 'axios';\nimport { getStore } from '../libs/storage';\n\n// 创建一个axios对象出来\nconst request = axios.create({\n  timeout: 5000\n});\n\n// request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\nrequest.interceptors.request.use(config => {\n  config.headers['Content-Type'] = 'application/json;charset=utf-8';\n  config.headers['accessToken'] = getStore('accessToken');\n\n  // config.headers['token'] = user.token;  // 设置请求头\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// response 拦截器\n// 可以在接口响应后统一处理结果\nrequest.interceptors.response.use(response => {\n  // response.data即为后端返回的Result\n  let res = response.data;\n  // 兼容服务端返回的字符串数据\n  if (typeof res === 'string') {\n    res = res ? JSON.parse(res) : res;\n  }\n  return res;\n}, error => {\n  console.log('err' + error); // for debug\n  return Promise.reject(error);\n});\nexport default request;","map":{"version":3,"names":["axios","getStore","request","create","timeout","interceptors","use","config","headers","error","Promise","reject","response","res","data","JSON","parse","console","log"],"sources":["D:/Graduation-project/front/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\r\nimport {getStore} from '../libs/storage';\r\n\r\n// 创建一个axios对象出来\r\nconst request = axios.create({\r\n   timeout: 5000\r\n})\r\n\r\n// request 拦截器\r\n// 可以自请求发送前对请求做一些处理\r\n// 比如统一加token，对请求参数统一加密\r\nrequest.interceptors.request.use(config => {\r\n   config.headers['Content-Type'] = 'application/json;charset=utf-8';\r\n   config.headers['accessToken'] = getStore('accessToken');\r\n\r\n   // config.headers['token'] = user.token;  // 设置请求头\r\n   return config\r\n}, error => {\r\n   return Promise.reject(error)\r\n});\r\n\r\n// response 拦截器\r\n// 可以在接口响应后统一处理结果\r\nrequest.interceptors.response.use(\r\n   response => {\r\n      // response.data即为后端返回的Result\r\n      let res = response.data;\r\n      // 兼容服务端返回的字符串数据\r\n      if (typeof res === 'string') {\r\n         res = res ? JSON.parse(res) : res\r\n      }\r\n      return res;\r\n   },\r\n   error => {\r\n      console.log('err' + error) // for debug\r\n      return Promise.reject(error)\r\n   }\r\n)\r\n\r\n\r\nexport default request\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,iBAAiB;;AAExC;AACA,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC1BC,OAAO,EAAE;AACZ,CAAC,CAAC;;AAEF;AACA;AACA;AACAF,OAAO,CAACG,YAAY,CAACH,OAAO,CAACI,GAAG,CAACC,MAAM,IAAI;EACxCA,MAAM,CAACC,OAAO,CAAC,cAAc,CAAC,GAAG,gCAAgC;EACjED,MAAM,CAACC,OAAO,CAAC,aAAa,CAAC,GAAGP,QAAQ,CAAC,aAAa,CAAC;;EAEvD;EACA,OAAOM,MAAM;AAChB,CAAC,EAAEE,KAAK,IAAI;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC/B,CAAC,CAAC;;AAEF;AACA;AACAP,OAAO,CAACG,YAAY,CAACO,QAAQ,CAACN,GAAG,CAC9BM,QAAQ,IAAI;EACT;EACA,IAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAI;EACvB;EACA,IAAI,OAAOD,GAAG,KAAK,QAAQ,EAAE;IAC1BA,GAAG,GAAGA,GAAG,GAAGE,IAAI,CAACC,KAAK,CAACH,GAAG,CAAC,GAAGA,GAAG;EACpC;EACA,OAAOA,GAAG;AACb,CAAC,EACDJ,KAAK,IAAI;EACNQ,OAAO,CAACC,GAAG,CAAC,KAAK,GAAGT,KAAK,CAAC,EAAC;EAC3B,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC/B,CACH,CAAC;AAGD,eAAeP,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}