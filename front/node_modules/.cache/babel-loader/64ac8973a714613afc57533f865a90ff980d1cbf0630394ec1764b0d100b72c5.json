{"ast":null,"code":"import { getNoticeList, deleteNotice, changeOpenNotice, changeCloseNotice } from \"./api.js\";\nimport add from \"./add.vue\";\nimport edit from \"./edit.vue\";\nexport default {\n  name: \"single-window\",\n  components: {\n    add,\n    edit\n  },\n  data() {\n    return {\n      tableHeight: 0,\n      selected: [\"选择\", \"序号\", \"公告标题\", \"公告内容\", \"发布时间\", \"发布者\", \"修改时间\", \"修改者\", \"公开状态\", \"操作\"],\n      modal1: false,\n      openSearch: true,\n      // 显示搜索\n      openTip: true,\n      // 显示提示\n      formData: {},\n      currView: \"index\",\n      loading: true,\n      // 表单加载状态\n      searchForm: {\n        // 搜索框初始化对象\n        pageNumber: 1,\n        // 当前页数\n        pageSize: 15,\n        // 页面大小\n        sort: \"createTime\",\n        // 默认排序字段\n        order: \"desc\" // 默认排序方式\n      },\n      selectList: [],\n      // 多选数据\n      selectCount: 0,\n      // 多选计数\n      selectRow: 0,\n      columns: [\n      // 表头\n      {\n        type: \"selection\",\n        width: 60,\n        title: \"选择\",\n        align: \"center\",\n        fixed: \"left\"\n      }, {\n        title: \"序号\",\n        width: 85,\n        align: \"center\",\n        fixed: \"left\",\n        sortType: true,\n        render: (h, params) => {\n          return h(\"span\", params.index + (this.searchForm.pageNumber - 1) * this.searchForm.pageSize + 1);\n        }\n      }, {\n        title: \"公告标题\",\n        key: \"title\",\n        minWidth: 120,\n        tooltip: true,\n        align: \"center\",\n        sortable: false\n      }, {\n        title: \"公告内容\",\n        key: \"remark\",\n        minWidth: 200,\n        tooltip: true,\n        align: \"center\",\n        sortable: false\n      }, {\n        title: \"发布时间\",\n        key: \"createTime\",\n        sortable: true,\n        sortType: \"desc\",\n        minWidth: 180,\n        align: \"center\",\n        tooltip: true\n      }, {\n        title: \"发布者\",\n        key: \"createBy\",\n        sortable: true,\n        sortType: \"desc\",\n        minWidth: 100,\n        align: \"center\",\n        tooltip: true\n      }, {\n        title: \"修改时间\",\n        key: \"updateTime\",\n        minWidth: 180,\n        align: \"center\",\n        tooltip: true\n      }, {\n        title: \"修改者\",\n        key: \"updateBy\",\n        minWidth: 100,\n        align: \"center\",\n        tooltip: true\n      }, {\n        title: \"公开状态\",\n        key: \"open\",\n        minWidth: 100,\n        tooltip: true,\n        align: \"center\",\n        sortable: false,\n        render: (h, params) => {\n          if (params.row.open) {\n            return h(\"div\", [h(\"span\", {\n              style: {\n                color: \"#3CB371\"\n              }\n            }, \"已公开\")]);\n          } else {\n            return h(\"div\", [h(\"span\", {\n              style: {\n                color: \"#ff0000\"\n              }\n            }, \"未公开\")]);\n          }\n        }\n      }, {\n        title: \"操作\",\n        key: \"action\",\n        align: \"center\",\n        width: 400,\n        render: (h, params) => {\n          return h(\"div\", [h(\"Button\", {\n            props: {\n              type: \"primary\",\n              size: \"small\",\n              icon: \"ios-create-outline\",\n              ghost: true,\n              disabled: params.row.open\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: () => {\n                this.changeOpenNoticeFx(params.row);\n              }\n            }\n          }, \"公开\"), h(\"Button\", {\n            props: {\n              type: \"error\",\n              size: \"small\",\n              icon: \"ios-create-outline\",\n              ghost: true,\n              disabled: !params.row.open\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: () => {\n                this.changeCloseNoticeFx(params.row);\n              }\n            }\n          }, \"隐藏\"),\n          // h(\n          //     \"Switch\", {\n          //         props: {\n          //         size: \"small\",\n          //         disabled: false, // 根据状态决定是否可用\n          //         value: params.row.open\n          //         },\n          //         on: {\n          //             change: (value) => {\n          //                 if (value) {\n          //                     this.Open(params.row);\n          //                 } else {\n          //                     this.Close(params.row);\n          //                 }\n          //             }\n          //         }\n          //     }\n          // ),\n          h(\"Button\", {\n            props: {\n              type: \"primary\",\n              size: \"small\",\n              icon: \"ios-create-outline\",\n              ghost: true\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: () => {\n                this.edit(params.row);\n              }\n            }\n          }, \"编辑\"), h(\"Button\", {\n            props: {\n              type: \"error\",\n              size: \"small\",\n              icon: \"md-trash\",\n              ghost: true\n            },\n            on: {\n              click: () => {\n                this.remove(params.row);\n              }\n            }\n          }, \"删除\")]);\n        }\n      }],\n      data: [],\n      // 表单数据\n      pageNumber: 1,\n      // 当前页数\n      pageSize: 10,\n      // 页面大小\n      total: 0,\n      // 表单数据总数\n      showFilterPanelFlag: false\n    };\n  },\n  methods: {\n    init() {\n      this.getDataList();\n    },\n    submited() {\n      this.currView = \"index\";\n      this.getDataList();\n    },\n    changeOpenNoticeFx(e) {\n      var that = this;\n      changeOpenNotice({\n        id: e.id\n      }).then(res => {\n        if (res.success) {\n          this.$Message.success(\"公告公开成功\");\n          that.getDataList();\n        }\n      }).catch(error => {\n        console.error(\"请求出错:\", error);\n        this.$Message.error(\"请求出错，请重试\");\n      });\n    },\n    changeCloseNoticeFx(e) {\n      var that = this;\n      changeCloseNotice({\n        id: e.id\n      }).then(res => {\n        if (res.success) {\n          this.$Message.success(\"公告隐藏成功\");\n          that.getDataList();\n        }\n      }).catch(error => {\n        console.error(\"请求出错:\", error);\n        this.$Message.error(\"请求出错，请重试\");\n      });\n    },\n    changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getDataList();\n      this.clearSelectAll();\n    },\n    changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getDataList();\n    },\n    rowClick(row, index) {\n      this.selectRow = row;\n    },\n    rowClassNmae(row, index) {\n      if (row.id == this.selectRow.id) {\n        return \"rowClassNmaeColor\";\n      }\n      return \"\";\n    },\n    excelData() {\n      this.$refs.table.exportCsv({\n        filename: \"导出结果\"\n      });\n    },\n    handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 15;\n      this.getDataList();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 15;\n      // 重新加载数据\n      this.getDataList();\n    },\n    changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n      if (e.order === \"normal\") {\n        this.searchForm.order = \"\";\n      }\n      this.getDataList();\n    },\n    clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    changeSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    getDataList() {\n      this.loading = true;\n      getNoticeList(this.searchForm).then(res => {\n        this.loading = false;\n        if (res.success) {\n          this.data = res.result.records;\n          this.total = res.result.total;\n        }\n      });\n    },\n    add() {\n      this.currView = \"add\";\n    },\n    edit(v) {\n      // 转换null为\"\"\n      for (let attr in v) {\n        if (v[attr] == null) {\n          v[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(v);\n      let data = JSON.parse(str);\n      this.formData = data;\n      this.currView = \"edit\";\n    },\n    remove(v) {\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        // 记得确认修改此处\n        content: \"您确认要删除 \" + v.name + \" ?\",\n        loading: true,\n        onOk: () => {\n          // 删除\n          deleteNotice({\n            ids: v.id\n          }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getDataList();\n            }\n          });\n        }\n      });\n    },\n    delAll() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function (e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          // 批量删除\n          deleteNotice({\n            ids: ids\n          }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.clearSelectAll();\n              this.getDataList();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted() {\n    this.init();\n    this.tableHeight = Number(window.innerHeight - 273);\n    this.mycolumns = this.columns;\n    let showcolumns = [];\n    for (var i = 0; i < this.selected.length; i++) {\n      var item = this.selected[i];\n      for (var j = 0; j < this.columns.length; j++) {\n        if (this.columns[j].title == item) {\n          showcolumns.push(this.columns[j]);\n        }\n      }\n    }\n    this.columns = showcolumns;\n  },\n  watch: {\n    selected: function (newcolumns) {\n      let showcolumns = [];\n      for (var i = 0; i < this.mycolumns.length; i++) {\n        var item = this.mycolumns[i];\n        if (item.title == undefined) showcolumns.push(item);else if (newcolumns.contains(item.title)) showcolumns.push(item);\n      }\n      this.columns = showcolumns;\n    }\n  }\n};","map":{"version":3,"names":["getNoticeList","deleteNotice","changeOpenNotice","changeCloseNotice","add","edit","name","components","data","tableHeight","selected","modal1","openSearch","openTip","formData","currView","loading","searchForm","pageNumber","pageSize","sort","order","selectList","selectCount","selectRow","columns","type","width","title","align","fixed","sortType","render","h","params","index","key","minWidth","tooltip","sortable","row","open","style","color","props","size","icon","ghost","disabled","marginRight","on","click","changeOpenNoticeFx","changeCloseNoticeFx","remove","total","showFilterPanelFlag","methods","init","getDataList","submited","e","that","id","then","res","success","$Message","catch","error","console","changePage","v","clearSelectAll","changePageSize","rowClick","rowClassNmae","excelData","$refs","table","exportCsv","filename","handleSearch","handleReset","resetFields","changeSort","selectAll","changeSelect","length","result","records","attr","str","JSON","stringify","parse","$Modal","confirm","content","onOk","ids","delAll","warning","forEach","substring","mounted","Number","window","innerHeight","mycolumns","showcolumns","i","item","j","push","watch","newcolumns","undefined","contains"],"sources":["src/views/notice/index.vue"],"sourcesContent":["<template>\r\n    <div class=\"search\">\r\n        <add v-if=\"currView=='add'\" @close=\"currView='index'\" @submited=\"submited\" />\r\n        <edit v-if=\"currView=='edit'\" @close=\"currView='index'\" @submited=\"submited\" :data=\"formData\" />\r\n        <Card v-show=\"currView=='index'\">\r\n            <Row v-show=\"openSearch\" @keydown.enter.native=\"handleSearch\">\r\n                <Form ref=\"searchForm\" :model=\"searchForm\" inline :label-width=\"0\">\r\n                    <Form-item ref=\"searchForm\" :model=\"searchForm\" inline :label-width=\"0\" style=\"display:flex;\">\r\n                        <Form-item label=\"\" prop=\"title\">\r\n                            <Input type=\"text\" v-model=\"searchForm.title\" placeholder=\"请输入公告标题\" clearable style=\"width: 200px\" />\r\n                        </Form-item>\r\n                        <Form-item style=\"margin-left:10px;\" class=\"br\">\r\n                            <Button @click=\"handleSearch\" type=\"primary\" icon=\"ios-search\" size=\"small\" ghost>搜索</Button>\r\n                            <Button @click=\"handleReset\" type=\"warning\" size=\"small\" icon=\"md-refresh\" ghost>重置</Button>\r\n                            <Button @click=\"add\" type=\"info\" size=\"small\" icon=\"md-add\" ghost>添加</Button>\r\n                            <Button @click=\"delAll\" type=\"error\" icon=\"md-trash\" size=\"small\" ghost>删除</Button>\r\n                            <Button @click=\"excelData\" type=\"success\" icon=\"md-paper-plane\" size=\"small\" ghost>导出</Button>\r\n                        </Form-item>\r\n                        <Form-item style=\"position:fixed;right:50px;top:130px\">\r\n                            <Button type=\"info\" @click=\"showFilterPanelFlag = !showFilterPanelFlag\" class=\"showFilterPanelFlag\" icon=\"md-settings\" size=\"small\" ghost>\r\n                                列筛选</Button>\r\n                            <Button type=\"warning\" @click=\"modal1 = true\" class=\"showFilterPanelFlag\" icon=\"ios-help-circle-outline\" size=\"small\" ghost>\r\n                                使用教程</Button>\r\n                            <Modal v-model=\"modal1\" title=\"使用教程\">\r\n                                <p>1.XXXXXXXXXXXXXXXXXXXXXXXX</p>\r\n                                <p>2.XXXXXXXXXXXXXXXXXXXXXXXX</p>\r\n                                <p>3.XXXXXXXXXXXXXXXXXXXXXXXX</p>\r\n                            </Modal>\r\n                        </Form-item>\r\n                    </Form-item>\r\n                </Form>\r\n            </Row>\r\n            <Row class=\"operation\" style=\"position:relative;\">\r\n                <transition>\r\n                    <div v-show=\"showFilterPanelFlag\" class=\"filter-panel\">\r\n                        <CheckboxGroup v-model=\"selected\">\r\n                            <div v-for=\"item in mycolumns\" :key=\"item.key\">\r\n                                <Checkbox :label=\"item.title\" style=\"margin: 2px 5px\"></Checkbox>\r\n                            </div>\r\n                        </CheckboxGroup>\r\n                    </div>\r\n                </transition>\r\n            </Row>\r\n            <Row v-show=\"openTip\"> </Row>\r\n            <Row>\r\n                <Table :loading=\"loading\" :height=\"tableHeight\" border stripe size=\"small\" :columns=\"columns\" :data=\"data\" ref=\"table\" sortable=\"custom\" @on-sort-change=\"changeSort\" @on-selection-change=\"changeSelect\" @on-row-click=\"rowClick\" :row-class-name=\"rowClassNmae\"></Table>\r\n            </Row>\r\n            <Row type=\"flex\" justify=\"end\" class=\"page\">\r\n                <Page :current=\"searchForm.pageNumber\" :total=\"total\" :page-size=\"searchForm.pageSize\" @on-change=\"changePage\" @on-page-size-change=\"changePageSize\" :page-size-opts=\"[15,20,50]\" size=\"small\" show-total show-elevator show-sizer></Page>\r\n            </Row>\r\n        </Card>\r\n    </div>\r\n    </template>\r\n    \r\n    <script>\r\n    import {\r\n        getNoticeList,\r\n        deleteNotice,\r\n        changeOpenNotice,\r\n        changeCloseNotice\r\n    } from \"./api.js\";\r\n    import add from \"./add.vue\";\r\n    import edit from \"./edit.vue\";\r\n    export default {\r\n        name: \"single-window\",\r\n        components: {\r\n            add,\r\n            edit\r\n        },\r\n        data() {\r\n            return {\r\n                tableHeight: 0,\r\n                selected: [\r\n                    \"选择\",\r\n                    \"序号\",\r\n                    \"公告标题\",\r\n                    \"公告内容\",\r\n                    \"发布时间\",\r\n                    \"发布者\",\r\n                    \"修改时间\",\r\n                    \"修改者\",\r\n                    \"公开状态\",\r\n                    \"操作\",\r\n                ],\r\n                modal1: false,\r\n                openSearch: true, // 显示搜索\r\n                openTip: true, // 显示提示\r\n                formData: {},\r\n                currView: \"index\",\r\n                loading: true, // 表单加载状态\r\n                searchForm: { // 搜索框初始化对象\r\n                    pageNumber: 1, // 当前页数\r\n                    pageSize: 15, // 页面大小\r\n                    sort: \"createTime\", // 默认排序字段\r\n                    order: \"desc\", // 默认排序方式\r\n                },\r\n                selectList: [], // 多选数据\r\n                selectCount: 0, // 多选计数\r\n                selectRow: 0,\r\n                columns: [\r\n                    // 表头\r\n                    {\r\n                        type: \"selection\",\r\n                        width: 60,\r\n                        title: \"选择\",\r\n                        align: \"center\",\r\n                        fixed: \"left\",\r\n                    },\r\n                    {\r\n                        title: \"序号\",\r\n                        width: 85,\r\n                        align: \"center\",\r\n                        fixed: \"left\",\r\n                        sortType: true,\r\n                        render: (h, params) => {\r\n                            return h(\r\n                                \"span\",\r\n                                params.index +\r\n                                (this.searchForm.pageNumber - 1) * this.searchForm.pageSize +\r\n                                1\r\n                            );\r\n                        },\r\n                    },\r\n                    {\r\n                        title: \"公告标题\",\r\n                        key: \"title\",\r\n                        minWidth: 120,\r\n                        tooltip: true,\r\n                        align: \"center\",\r\n                        sortable: false,\r\n                    },\r\n                    {\r\n                        title: \"公告内容\",\r\n                        key: \"remark\",\r\n                        minWidth: 200,\r\n                        tooltip: true,\r\n                        align: \"center\",\r\n                        sortable: false,\r\n                    },\r\n                    {\r\n                        title: \"发布时间\",\r\n                        key: \"createTime\",\r\n                        sortable: true,\r\n                        sortType: \"desc\",\r\n                        minWidth: 180,\r\n                        align: \"center\",\r\n                        tooltip: true,\r\n                    },\r\n                    {\r\n                        title: \"发布者\",\r\n                        key: \"createBy\",\r\n                        sortable: true,\r\n                        sortType: \"desc\",\r\n                        minWidth: 100,\r\n                        align: \"center\",\r\n                        tooltip: true,\r\n                    },\r\n                    {\r\n                        title: \"修改时间\",\r\n                        key: \"updateTime\",\r\n                        minWidth: 180,\r\n                        align: \"center\",\r\n                        tooltip: true,\r\n                    },\r\n                    {\r\n                        title: \"修改者\",\r\n                        key: \"updateBy\",\r\n                        minWidth: 100,\r\n                        align: \"center\",\r\n                        tooltip: true,\r\n                    },\r\n                    {\r\n                    title: \"公开状态\",\r\n                    key: \"open\",\r\n                    minWidth: 100,\r\n                    tooltip: true,\r\n                    align: \"center\",\r\n                    sortable: false,\r\n                    render: (h, params) => {\r\n                        if (params.row.open) {\r\n                            return h(\"div\", [\r\n                                h(\r\n                                    \"span\", {\r\n                                        style: {\r\n                                            color: \"#3CB371\",\r\n                                        },\r\n                                    },\r\n                                    \"已公开\"\r\n                                ),\r\n                            ]);\r\n                        } else {\r\n                            return h(\"div\", [\r\n                                h(\r\n                                    \"span\", {\r\n                                        style: {\r\n                                            color: \"#ff0000\",\r\n                                        },\r\n                                    },\r\n                                    \"未公开\"\r\n                                ),\r\n                            ]);\r\n                        }\r\n                    },\r\n                },\r\n                    {\r\n                        title: \"操作\",\r\n                        key: \"action\",\r\n                        align: \"center\",\r\n                        width: 400,\r\n                        render: (h, params) => {\r\n                            return h(\"div\", [\r\n                                h(\r\n                                    \"Button\", {\r\n                                        props: {\r\n                                            type: \"primary\",\r\n                                            size: \"small\",\r\n                                            icon: \"ios-create-outline\",\r\n                                            ghost: true,\r\n                                            disabled: params.row.open\r\n                                        },\r\n                                        style: {\r\n                                            marginRight: \"5px\"\r\n                                        },\r\n                                        on: {\r\n                                            click: () => {\r\n                                                this.changeOpenNoticeFx(params.row);\r\n                                            }\r\n                                        }\r\n                                    },\r\n                                    \"公开\"\r\n                                ),\r\n                                h(\r\n                                    \"Button\", {\r\n                                        props: {\r\n                                            type: \"error\",\r\n                                            size: \"small\",\r\n                                            icon: \"ios-create-outline\",\r\n                                            ghost: true,\r\n                                            disabled: !params.row.open,\r\n                                        },\r\n                                        style: {\r\n                                            marginRight: \"5px\",\r\n                                        },\r\n                                        on: {\r\n                                            click: () => {\r\n                                                this.changeCloseNoticeFx(params.row);\r\n                                            }\r\n                                        }\r\n                                    },\r\n                                    \"隐藏\"\r\n                                ),\r\n\r\n                                // h(\r\n                                //     \"Switch\", {\r\n                                //         props: {\r\n                                //         size: \"small\",\r\n                                //         disabled: false, // 根据状态决定是否可用\r\n                                //         value: params.row.open\r\n                                //         },\r\n                                //         on: {\r\n                                //             change: (value) => {\r\n                                //                 if (value) {\r\n                                //                     this.Open(params.row);\r\n                                //                 } else {\r\n                                //                     this.Close(params.row);\r\n                                //                 }\r\n                                //             }\r\n                                //         }\r\n                                //     }\r\n                                // ),\r\n                                h(\r\n                                    \"Button\", {\r\n                                        props: {\r\n                                            type: \"primary\",\r\n                                            size: \"small\",\r\n                                            icon: \"ios-create-outline\",\r\n                                            ghost: true\r\n                                        },\r\n                                        style: {\r\n                                            marginRight: \"5px\"\r\n                                        },\r\n                                        on: {\r\n                                            click: () => {\r\n                                                this.edit(params.row);\r\n                                            }\r\n                                        }\r\n                                    },\r\n                                    \"编辑\"\r\n                                ),\r\n                                h(\r\n                                    \"Button\", {\r\n                                        props: {\r\n                                            type: \"error\",\r\n                                            size: \"small\",\r\n                                            icon: \"md-trash\",\r\n                                            ghost: true\r\n                                        },\r\n                                        on: {\r\n                                            click: () => {\r\n                                                this.remove(params.row);\r\n                                            }\r\n                                        }\r\n                                    },\r\n                                    \"删除\"\r\n                                )\r\n                            ]);\r\n                        }\r\n                    }\r\n                ],\r\n                data: [], // 表单数据\r\n                pageNumber: 1, // 当前页数\r\n                pageSize: 10, // 页面大小\r\n                total: 0, // 表单数据总数\r\n                showFilterPanelFlag: false,\r\n            };\r\n        },\r\n        methods: {\r\n            init() {\r\n                this.getDataList();\r\n            },\r\n            submited() {\r\n                this.currView = \"index\";\r\n                this.getDataList();\r\n            },\r\n            changeOpenNoticeFx(e) {\r\n                var that = this;\r\n                changeOpenNotice({\r\n                    id: e.id\r\n                }).then(res => {\r\n                    if (res.success) {\r\n                        this.$Message.success(\"公告公开成功\");\r\n                        that.getDataList();\r\n                    }\r\n                }).catch(error => {\r\n                    console.error(\"请求出错:\", error);\r\n                    this.$Message.error(\"请求出错，请重试\");\r\n                });\r\n            },\r\n            changeCloseNoticeFx(e) {\r\n                var that = this;\r\n                changeCloseNotice({\r\n                  id: e.id\r\n                }).then(res => {\r\n                    if (res.success) {\r\n                        this.$Message.success(\"公告隐藏成功\");\r\n                        that.getDataList();\r\n                    }\r\n                }).catch(error => {\r\n                    console.error(\"请求出错:\", error);\r\n                    this.$Message.error(\"请求出错，请重试\");\r\n                });\r\n            },\r\n            changePage(v) {\r\n                this.searchForm.pageNumber = v;\r\n                this.getDataList();\r\n                this.clearSelectAll();\r\n            },\r\n            changePageSize(v) {\r\n                this.searchForm.pageSize = v;\r\n                this.getDataList();\r\n            },\r\n            rowClick(row, index) {\r\n                this.selectRow = row;\r\n            },\r\n            rowClassNmae(row, index) {\r\n                if (row.id == this.selectRow.id) {\r\n                    return \"rowClassNmaeColor\";\r\n                }\r\n                return \"\";\r\n            },\r\n            excelData() {\r\n                this.$refs.table.exportCsv({\r\n                    filename: \"导出结果\",\r\n                });\r\n            },\r\n            handleSearch() {\r\n                this.searchForm.pageNumber = 1;\r\n                this.searchForm.pageSize = 15;\r\n                this.getDataList();\r\n            },\r\n            handleReset() {\r\n                this.$refs.searchForm.resetFields();\r\n                this.searchForm.pageNumber = 1;\r\n                this.searchForm.pageSize = 15;\r\n                // 重新加载数据\r\n                this.getDataList();\r\n            },\r\n            changeSort(e) {\r\n                this.searchForm.sort = e.key;\r\n                this.searchForm.order = e.order;\r\n                if (e.order === \"normal\") {\r\n                    this.searchForm.order = \"\";\r\n                }\r\n                this.getDataList();\r\n            },\r\n            clearSelectAll() {\r\n                this.$refs.table.selectAll(false);\r\n            },\r\n            changeSelect(e) {\r\n                this.selectList = e;\r\n                this.selectCount = e.length;\r\n            },\r\n            getDataList() {\r\n                this.loading = true;\r\n                getNoticeList(this.searchForm).then(res => {\r\n                    this.loading = false;\r\n                    if (res.success) {\r\n                        this.data = res.result.records;\r\n                        this.total = res.result.total;\r\n                    }\r\n                });\r\n            },\r\n            add() {\r\n                this.currView = \"add\";\r\n            },\r\n            edit(v) {\r\n                // 转换null为\"\"\r\n                for (let attr in v) {\r\n                    if (v[attr] == null) {\r\n                        v[attr] = \"\";\r\n                    }\r\n                }\r\n                let str = JSON.stringify(v);\r\n                let data = JSON.parse(str);\r\n                this.formData = data;\r\n                this.currView = \"edit\";\r\n            },\r\n            remove(v) {\r\n                this.$Modal.confirm({\r\n                    title: \"确认删除\",\r\n                    // 记得确认修改此处\r\n                    content: \"您确认要删除 \" + v.name + \" ?\",\r\n                    loading: true,\r\n                    onOk: () => {\r\n                        // 删除\r\n                        deleteNotice({\r\n                            ids: v.id\r\n                        }).then(res => {\r\n                            this.$Modal.remove();\r\n                            if (res.success) {\r\n                                this.$Message.success(\"操作成功\");\r\n                                this.getDataList();\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            },\r\n            delAll() {\r\n                if (this.selectCount <= 0) {\r\n                    this.$Message.warning(\"您还未选择要删除的数据\");\r\n                    return;\r\n                }\r\n                this.$Modal.confirm({\r\n                    title: \"确认删除\",\r\n                    content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\r\n                    loading: true,\r\n                    onOk: () => {\r\n                        let ids = \"\";\r\n                        this.selectList.forEach(function (e) {\r\n                            ids += e.id + \",\";\r\n                        });\r\n                        ids = ids.substring(0, ids.length - 1);\r\n                        // 批量删除\r\n                        deleteNotice({\r\n                            ids: ids\r\n                        }).then(res => {\r\n                            this.$Modal.remove();\r\n                            if (res.success) {\r\n                                this.$Message.success(\"操作成功\");\r\n                                this.clearSelectAll();\r\n                                this.getDataList();\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        mounted() {\r\n            this.init();\r\n            this.tableHeight = Number(window.innerHeight - 273);\r\n            this.mycolumns = this.columns;\r\n            let showcolumns = [];\r\n            for (var i = 0; i < this.selected.length; i++) {\r\n                var item = this.selected[i];\r\n                for (var j = 0; j < this.columns.length; j++) {\r\n                    if (this.columns[j].title == item) {\r\n                        showcolumns.push(this.columns[j]);\r\n                    }\r\n                }\r\n            }\r\n            this.columns = showcolumns;\r\n        },\r\n        watch: {\r\n            selected: function (newcolumns) {\r\n                let showcolumns = [];\r\n                for (var i = 0; i < this.mycolumns.length; i++) {\r\n                    var item = this.mycolumns[i];\r\n                    if (item.title == undefined) showcolumns.push(item);\r\n                    else if (newcolumns.contains(item.title)) showcolumns.push(item);\r\n                }\r\n                this.columns = showcolumns;\r\n            },\r\n        },\r\n    };\r\n    </script>\r\n    \r\n    <style lang=\"less\">\r\n    // @import \"../../../styles/table-common.less\";\r\n    .search {\r\n        .operation {\r\n            margin-bottom: 2vh;\r\n        }\r\n    \r\n        .select-count {\r\n            font-weight: 600;\r\n            color: #40a9ff;\r\n        }\r\n    \r\n        .select-clear {\r\n            margin-left: 10px;\r\n        }\r\n    \r\n        .page {\r\n            margin-top: 2vh;\r\n        }\r\n    \r\n        .drop-down {\r\n            margin-left: 5px;\r\n        }\r\n    }\r\n    \r\n    .filter-panel {\r\n        width: 166px;\r\n        min-height: 120px;\r\n        height: 200px;\r\n        position: absolute;\r\n        background-color: white;\r\n        z-index: 9999;\r\n        margin-left: 1px;\r\n        overflow-y: scroll;\r\n        border: 1px solid blue;\r\n        top: 35px;\r\n        right: 10px;\r\n    }\r\n    \r\n    .openSearch {\r\n        position: absolute;\r\n        right: 240px;\r\n    }\r\n    \r\n    .openTip {\r\n        position: absolute;\r\n        right: 130px;\r\n    }\r\n    \r\n    .showFilterPanelFlag {\r\n        position: static !important;\r\n        right: 10px;\r\n        margin-right: 10px;\r\n    }\r\n    \r\n    .ivu-table td {\r\n        height: 38px !important;\r\n    }\r\n    \r\n    .ivu-table-cell-with-expand {\r\n        height: 38px !important;\r\n        line-height: 38px !important;\r\n    }\r\n    \r\n    .ivu-table .rowClassNmaeColor td {\r\n        background-color: #b0b3b6 !important;\r\n        color: #ffffff !important;\r\n        font-size: 12px;\r\n    }\r\n    </style>\r\n    "],"mappings":"AAuDA,SACAA,aAAA,EACAC,YAAA,EACAC,gBAAA,EACAC,iBAAA,QACA;AACA,OAAAC,GAAA;AACA,OAAAC,IAAA;AACA;EACAC,IAAA;EACAC,UAAA;IACAH,GAAA;IACAC;EACA;EACAG,KAAA;IACA;MACAC,WAAA;MACAC,QAAA,GACA,MACA,MACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,KACA;MACAC,MAAA;MACAC,UAAA;MAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MACAC,QAAA;MACAC,OAAA;MAAA;MACAC,UAAA;QAAA;QACAC,UAAA;QAAA;QACAC,QAAA;QAAA;QACAC,IAAA;QAAA;QACAC,KAAA;MACA;MACAC,UAAA;MAAA;MACAC,WAAA;MAAA;MACAC,SAAA;MACAC,OAAA;MACA;MACA;QACAC,IAAA;QACAC,KAAA;QACAC,KAAA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAF,KAAA;QACAD,KAAA;QACAE,KAAA;QACAC,KAAA;QACAC,QAAA;QACAC,MAAA,EAAAA,CAAAC,CAAA,EAAAC,MAAA;UACA,OAAAD,CAAA,CACA,QACAC,MAAA,CAAAC,KAAA,GACA,MAAAlB,UAAA,CAAAC,UAAA,aAAAD,UAAA,CAAAE,QAAA,GACA,CACA;QACA;MACA,GACA;QACAS,KAAA;QACAQ,GAAA;QACAC,QAAA;QACAC,OAAA;QACAT,KAAA;QACAU,QAAA;MACA,GACA;QACAX,KAAA;QACAQ,GAAA;QACAC,QAAA;QACAC,OAAA;QACAT,KAAA;QACAU,QAAA;MACA,GACA;QACAX,KAAA;QACAQ,GAAA;QACAG,QAAA;QACAR,QAAA;QACAM,QAAA;QACAR,KAAA;QACAS,OAAA;MACA,GACA;QACAV,KAAA;QACAQ,GAAA;QACAG,QAAA;QACAR,QAAA;QACAM,QAAA;QACAR,KAAA;QACAS,OAAA;MACA,GACA;QACAV,KAAA;QACAQ,GAAA;QACAC,QAAA;QACAR,KAAA;QACAS,OAAA;MACA,GACA;QACAV,KAAA;QACAQ,GAAA;QACAC,QAAA;QACAR,KAAA;QACAS,OAAA;MACA,GACA;QACAV,KAAA;QACAQ,GAAA;QACAC,QAAA;QACAC,OAAA;QACAT,KAAA;QACAU,QAAA;QACAP,MAAA,EAAAA,CAAAC,CAAA,EAAAC,MAAA;UACA,IAAAA,MAAA,CAAAM,GAAA,CAAAC,IAAA;YACA,OAAAR,CAAA,SACAA,CAAA,CACA;cACAS,KAAA;gBACAC,KAAA;cACA;YACA,GACA,KACA,EACA;UACA;YACA,OAAAV,CAAA,SACAA,CAAA,CACA;cACAS,KAAA;gBACAC,KAAA;cACA;YACA,GACA,KACA,EACA;UACA;QACA;MACA,GACA;QACAf,KAAA;QACAQ,GAAA;QACAP,KAAA;QACAF,KAAA;QACAK,MAAA,EAAAA,CAAAC,CAAA,EAAAC,MAAA;UACA,OAAAD,CAAA,SACAA,CAAA,CACA;YACAW,KAAA;cACAlB,IAAA;cACAmB,IAAA;cACAC,IAAA;cACAC,KAAA;cACAC,QAAA,EAAAd,MAAA,CAAAM,GAAA,CAAAC;YACA;YACAC,KAAA;cACAO,WAAA;YACA;YACAC,EAAA;cACAC,KAAA,EAAAA,CAAA;gBACA,KAAAC,kBAAA,CAAAlB,MAAA,CAAAM,GAAA;cACA;YACA;UACA,GACA,IACA,GACAP,CAAA,CACA;YACAW,KAAA;cACAlB,IAAA;cACAmB,IAAA;cACAC,IAAA;cACAC,KAAA;cACAC,QAAA,GAAAd,MAAA,CAAAM,GAAA,CAAAC;YACA;YACAC,KAAA;cACAO,WAAA;YACA;YACAC,EAAA;cACAC,KAAA,EAAAA,CAAA;gBACA,KAAAE,mBAAA,CAAAnB,MAAA,CAAAM,GAAA;cACA;YACA;UACA,GACA,IACA;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACAP,CAAA,CACA;YACAW,KAAA;cACAlB,IAAA;cACAmB,IAAA;cACAC,IAAA;cACAC,KAAA;YACA;YACAL,KAAA;cACAO,WAAA;YACA;YACAC,EAAA;cACAC,KAAA,EAAAA,CAAA;gBACA,KAAA9C,IAAA,CAAA6B,MAAA,CAAAM,GAAA;cACA;YACA;UACA,GACA,IACA,GACA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}